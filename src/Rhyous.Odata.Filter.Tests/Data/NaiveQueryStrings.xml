<?xml version="1.0" encoding="utf-8" ?>
<Rows xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:x="urn:Row">
  <!-- Schema -->
  <xsd:schema targetNamespace="urn:Row" attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" >
    <xsd:element name="Row">
      <xsd:complexType>
        <xsd:sequence>
          <xsd:element type="xsd:string" name="Query"/>
          <xsd:element type="xsd:string" name="ExpectedExpression"/>
          <xsd:element type="xsd:string" name="Message"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <!--End Schema-->
  <!--Int equals-->
  <x:Row>
    <x:Query>Id eq 1</x:Query>
    <x:ExpectedExpression>e => (e.Id == 1)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Id eq 2</x:Query>
    <x:ExpectedExpression>e => (e.Id == 2)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Int not equals-->
  <x:Row>
    <x:Query>Id ne 1</x:Query>
    <x:ExpectedExpression>e => (e.Id != 1)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Id ne 20</x:Query>
    <x:ExpectedExpression>e => (e.Id != 20)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Int Greater than-->
  <x:Row>
    <x:Query>Id gt 1</x:Query>
    <x:ExpectedExpression>e => (e.Id > 1)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Id gt 0</x:Query>
    <x:ExpectedExpression>e => (e.Id > 0)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Int Greater than or equal to-->
  <x:Row>
    <x:Query>Id ge 2</x:Query>
    <x:ExpectedExpression>e => (e.Id >= 2)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Id ge 0</x:Query>
    <x:ExpectedExpression>e => (e.Id >= 0)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Id ge 100</x:Query>
    <x:ExpectedExpression>e => (e.Id >= 100)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Int less than-->
  <x:Row>
    <x:Query>Id lt 100</x:Query>
    <x:ExpectedExpression>e => (e.Id &lt; 100)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Id lt 0</x:Query>
    <x:ExpectedExpression>e => (e.Id &lt; 0)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Int less than or equal to-->
  <x:Row>
    <x:Query>Id le 0</x:Query>
    <x:ExpectedExpression>e => (e.Id &lt;= 0)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Id le 0</x:Query>
    <x:ExpectedExpression>e => (e.Id &lt;= 0)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--String equals -->
  <x:Row>
    <x:Query>Name eq Jared</x:Query>
    <x:ExpectedExpression>e => (e.Name == "Jared")</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--String not equals -->
  <x:Row>
    <x:Query>Name ne Jared</x:Query>
    <x:ExpectedExpression>e => (e.Name != "Jared")</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--DateTime -->
  <x:Row>
    <x:Query>Date eq 01/01/2017</x:Query>
    <x:ExpectedExpression>e => (e.Date == 1/1/2017 12:00:00 AM)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Date Greater than-->
  <x:Row>
    <x:Query>Date gt 01/01/2017</x:Query>
    <x:ExpectedExpression>e => (e.Date > 1/1/2017 12:00:00 AM)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Date Greater than or equal to-->
  <x:Row>
    <x:Query>Date ge 01/01/2017</x:Query>
    <x:ExpectedExpression>e => (e.Date >= 1/1/2017 12:00:00 AM)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Date less than-->
  <x:Row>
    <x:Query>Date lt 01/01/2017</x:Query>
    <x:ExpectedExpression>e => (e.Date &lt; 1/1/2017 12:00:00 AM)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Date less than or equal to-->
  <x:Row>
    <x:Query>Date le 01/01/2017</x:Query>
    <x:ExpectedExpression>e => (e.Date &lt;= 1/1/2017 12:00:00 AM)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!-- Guid equals -->
  <x:Row>
    <x:Query>Guid eq {C1AA6176-425D-4981-BE4A-8F5C459E0FF9}</x:Query>
    <x:ExpectedExpression>e => (e.Guid == c1aa6176-425d-4981-be4a-8f5c459e0ff9)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!-- Guid not equals -->
  <x:Row>
    <x:Query>Guid ne {C1AA6176-425D-4981-BE4A-8F5C459E0FF9}</x:Query>
    <x:ExpectedExpression>e => (e.Guid != c1aa6176-425d-4981-be4a-8f5c459e0ff9)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Double equals-->
  <x:Row>
    <x:Query>Cost eq 1.10</x:Query>
    <x:ExpectedExpression>e => (e.Cost == 1.1)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Cost eq 2.95</x:Query>
    <x:ExpectedExpression>e => (e.Cost == 2.95)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Double not equals-->
  <x:Row>
    <x:Query>Cost ne 1.10</x:Query>
    <x:ExpectedExpression>e => (e.Cost != 1.1)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Cost ne 20.0</x:Query>
    <x:ExpectedExpression>e => (e.Cost != 20)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Double Greater than-->
  <x:Row>
    <x:Query>Cost gt 1.10</x:Query>
    <x:ExpectedExpression>e => (e.Cost > 1.1)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Cost gt 0.0</x:Query>
    <x:ExpectedExpression>e => (e.Cost > 0)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Double Greater than or equal to-->
  <x:Row>
    <x:Query>Cost ge 2.15</x:Query>
    <x:ExpectedExpression>e => (e.Cost >= 2.15)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Cost ge 0.0</x:Query>
    <x:ExpectedExpression>e => (e.Cost >= 0)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Cost ge 100.0</x:Query>
    <x:ExpectedExpression>e => (e.Cost >= 100)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Double less than-->
  <x:Row>
    <x:Query>Cost lt 100.0</x:Query>
    <x:ExpectedExpression>e => (e.Cost &lt; 100)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Cost lt 0.0</x:Query>
    <x:ExpectedExpression>e => (e.Cost &lt; 0)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!--Double less than or equal to-->
  <x:Row>
    <x:Query>Cost le 0.0</x:Query>
    <x:ExpectedExpression>e => (e.Cost &lt;= 0)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <x:Row>
    <x:Query>Cost le 0.0</x:Query>
    <x:ExpectedExpression>e => (e.Cost &lt;= 0)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
  <!-- Extra spaces ignroed -->
  <x:Row>
    <x:Query>Id   ne   1</x:Query>
    <x:ExpectedExpression>e => (e.Id != 1)</x:ExpectedExpression>
    <x:Message>Expression should result in this expression: {0}.</x:Message>
  </x:Row>
</Rows>